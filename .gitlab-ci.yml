image: node:latest

cache:
  paths:
  - node_modules/
  
stages:
   - build
   - test
   - quality
   - deploy
  
build:
  stage: build
  script:
   - npm install
  
test:
  script:
   - npm test
  coverage: '/Branches.*?(\d+(?:\.\d+)?)%/'
  artifacts:
    paths:
      - .nyc_output/reports/

quality:
  stage: quality
  before_script:
    - npm install -g sonarqube-scanner
  script:
    - sonar-scanner -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN

dependency_scanning:
  stage: quality
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
        --env DEP_SCAN_DISABLE_REMOTE_CHECKS="${DEP_SCAN_DISABLE_REMOTE_CHECKS:-false}"
        --volume "$PWD:/code"
        --volume /var/run/docker.sock:/var/run/docker.sock
        "registry.gitlab.com/gitlab-org/security-products/dependency-scanning:$SP_VERSION" /code
  artifacts:
    paths: [gl-dependency-scanning-report.json]

pages:
  stage: deploy
  script:
    - mv .nyc_output/reports/ public/
  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    - master
